USE Org_DB

SET XACT_ABORT ON

DECLARE @subject varchar(max)		= 'ANE-100XXX Template to Void Receipt'
DECLARE @author varchar(max)		= 'Jesse Wei'
DECLARE @created_date datetime		= '11/08/2019'
DECLARE @type varchar(max)			= 'Datafix'
DECLARE @description varchar(max)	= ''
DECLARE @org varchar(100) = DB_NAME()
DECLARE @return int
EXEC @return = rollbackdb.dbo.audit_datafix @org, @subject, @author, @created_date, @type, @description
IF @@ERROR > 0 OR @return = -1 RETURN

DECLARE @receiptnumber money = 1001230.333 -- Receipt to void

--Fixed
IF EXISTS(SELECT * FROM RECEIPTHEADERS WHERE RECEIPTNUMBER = @receiptnumber AND VOIDED = -1) AND OBJECT_ID('rollbackdb.dbo.ANE_100XXX_RECEIPTHEADERS') IS NOT NULL BEGIN
	PRINT 'Nothing to fix. The data fix had already been deployed.'
	RETURN
END
--Target exists
ELSE IF EXISTS(SELECT * FROM RECEIPTHEADERS WHERE RECEIPTNUMBER = @receiptnumber AND VOIDED = 0) BEGIN
	IF OBJECT_ID('rollbackdb.dbo.ANE_100XXX_RECEIPTHEADERS') IS NOT NULL AND DB_NAME() LIKE '%TRAINER' BEGIN
		PRINT 'Trainer was refreshed after data fix deployment. Dropping rollback table ...'
		DROP TABLE rollbackdb.dbo.ANE_100XXX_RECEIPTHEADERS
		PRINT 'Drop is done.'
	END
END
--Invalid
ELSE BEGIN
	PRINT 'Nothing to fix. Target data not found.'
	RETURN
END

SELECT RECEIPTHEADER_ID, RECEIPTNUMBER, SYSTEMUSER_ID INTO rollbackdb.dbo.ANE_100XXX_RECEIPTHEADERS
FROM RECEIPTHEADERS (NOLOCK)
WHERE VOIDED = 0 AND RECEIPTNUMBER IN (@receiptnumber)
ORDER BY RECEIPTHEADER_ID

DECLARE @voided int = -1
DECLARE @voidedby int
DECLARE @voidedon datetime = getdate()
DECLARE @voiddesc varchar(30) = 'Void by ANE-100XXX'

DECLARE @RHeader table (ID int)
DECLARE @TxDetail table (TRANSACTION_ID int, RECEIPTDETAIL_ID int)
DECLARE @TempID table (ID int, ID2 int)

--Voided by the Internet User
SELECT TOP 1 @voidedby = SYSTEMUSER_ID FROM SYSTEM_USERS
WHERE PROFILE_ID = (SELECT PROFILE_ID FROM PROFILES WHERE NAME='Internet Profile')
	AND SITE_ID = (SELECT INTERNETSITE_ID FROM SYSTEM)

--(Should not happen) If Internet User not exist, use original system user of the first receipt
If @voidedby IS NULL BEGIN
	SELECT TOP 1 @voidedby = SYSTEMUSER_ID FROM rollbackdb.dbo.ANE_100XXX_RECEIPTHEADERS
END

--Short name of the rollback table
INSERT INTO @RHeader(ID)
SELECT RECEIPTHEADER_ID FROM rollbackdb.dbo.ANE_100XXX_RECEIPTHEADERS

INSERT INTO @TxDetail(TRANSACTION_ID, RECEIPTDETAIL_ID)
SELECT RD.TRANSACTION_ID, RD.RECEIPTDETAIL_ID FROM RECEIPTDETAILS RD (NOLOCK) INNER JOIN TRANSACTIONS T (NOLOCK) ON T.TRANSACTION_ID = RD.TRANSACTION_ID
WHERE T.RECEIPTHEADER_ID IN (SELECT ID FROM @RHeader)

BEGIN TRANSACTION
	UPDATE RECEIPTHEADERS
	SET VOIDED = @voided, VOIDEDBY = @voidedby, VOIDEDON = @voidedon
	WHERE RECEIPTHEADER_ID IN (SELECT ID FROM @RHeader)

	UPDATE TRANSACTIONS
	SET VOIDED = @voided, VOIDEDBY = @voidedby, VOIDEDON = @voidedon, ORIGINALTRANSACTIONTYPE = TRANSACTIONTYPE, TRANSACTIONTYPE = 18
	WHERE TRANSACTION_ID IN (SELECT TRANSACTION_ID FROM @TxDetail)

	UPDATE RECEIPTDETAILS
	SET VOIDED = @voided, VOIDEDBY = @voidedby, VOIDEDON = @voidedon
	WHERE RECEIPTDETAIL_ID IN (SELECT RECEIPTDETAIL_ID FROM @TxDetail)

	UPDATE RECEIPTPAYMENTS
	SET VOIDED = @voided, VOIDEDBY = @voidedby, VOIDEDON = @voidedon
	WHERE RECEIPTHEADER_ID IN (SELECT ID FROM @RHeader)

	UPDATE GL_LEDGER
	SET VOIDED = @voided, VOIDEDBY = @voidedby, VOIDEDON = @voidedon
	WHERE RECEIPTDETAIL_ID IN (SELECT RECEIPTDETAIL_ID FROM @TxDetail)

	INSERT INTO GL_LEDGER_LOG(GL_LEDGER_ID, TYPE_ID, DESCRIPTION, DATE_STAMP)
	SELECT GL_LEDGER_ID, 6, @voiddesc, @voidedon FROM GL_LEDGER (NOLOCK)
	WHERE RECEIPTDETAIL_ID IN (SELECT RECEIPTDETAIL_ID FROM @TxDetail)

	--Cash Rounding
	UPDATE GL_LEDGER
	SET VOIDED = @voided, VOIDEDBY = @voidedby, VOIDEDON = @voidedon
	WHERE RECEIPTDETAIL_ID IS NULL
		AND RECEIPTPAYMENT_ID IN (
			SELECT RECEIPTPAYMENT_ID FROM RECEIPTPAYMENTS (NOLOCK)
			WHERE RECEIPTHEADER_ID IN (SELECT ID FROM @RHeader) AND PAYMENTTYPE_ID = 1
		)

	INSERT INTO GL_LEDGER_LOG(GL_LEDGER_ID, TYPE_ID, DESCRIPTION, DATE_STAMP)
	SELECT GL_LEDGER_ID, 6, @voiddesc, @voidedon FROM GL_LEDGER (NOLOCK)
	WHERE RECEIPTDETAIL_ID IS NULL
		AND RECEIPTPAYMENT_ID IN (
			SELECT RECEIPTPAYMENT_ID FROM RECEIPTPAYMENTS (NOLOCK)
			WHERE RECEIPTHEADER_ID IN (SELECT ID FROM @RHeader) AND PAYMENTTYPE_ID = 1
		)

	UPDATE ARSCHEDULEHEADER
	SET VOIDED = @voided, VOIDEDBY = @voidedby, VOIDEDON = @voidedon
	WHERE RECEIPTPAYMENT_ID IN (
		SELECT RECEIPTPAYMENT_ID FROM RECEIPTPAYMENTS (NOLOCK)
		WHERE RECEIPTHEADER_ID IN (SELECT ID FROM @RHeader)
	)

	UPDATE ARSCHEDULEDETAIL
	SET VOIDED = @voided, VOIDEDBY = @voidedby, VOIDEDON = @voidedon
	WHERE ARSCHEDULEHEADER_ID IN (
			SELECT ARSCHEDULEHEADER_ID
			FROM ARSCHEDULEHEADER AH (NOLOCK) INNER JOIN RECEIPTPAYMENTS RP (NOLOCK) ON RP.RECEIPTPAYMENT_ID = AH.RECEIPTPAYMENT_ID
			WHERE RP.RECEIPTHEADER_ID IN (SELECT ID FROM @RHeader)
		)

	UPDATE ARTRANSACTIONS
	SET VOIDED = @voided, VOIDEDBY = @voidedby, VOIDEDON = @voidedon
	WHERE RECEIPTHEADER_ID IN (SELECT ID FROM @RHeader)

	UPDATE CUSTOMERACCOUNTS
	SET VOIDED = @voided, VOIDEDBY = @voidedby, VOIDEDON = @voidedon
	WHERE RECEIPTHEADER_ID IN (SELECT ID FROM @RHeader)
	
	--DISCOUNTDEPENDENCYLINKS
	DELETE FROM @TempID
	INSERT INTO @TempID(ID)
	SELECT DISCOUNT_DEPENDENCY_LINK_ID FROM DISCOUNTDEPENDENCYLINKS (NOLOCK)
	WHERE TRANSACTION_ID IN (SELECT TRANSACTION_ID FROM @TxDetail)
	IF EXISTS(SELECT ID FROM @TempID) BEGIN
		SELECT * INTO rollbackdb.dbo.ANE_100XXX_DISCOUNTDEPENDENCYLINKS FROM DISCOUNTDEPENDENCYLINKS (NOLOCK)
		WHERE DISCOUNT_DEPENDENCY_LINK_ID IN (SELECT ID FROM @TempID)

		UPDATE DISCOUNTDEPENDENCYLINKS
		SET COUNTED_AS_PERSON = 0, COUNTED_AS_ITEM = 0, COUNTED_AS_TRANSACTION = 0
		WHERE DISCOUNT_DEPENDENCY_LINK_ID IN (SELECT ID FROM @TempID)
	END
	
	--GIFT_CERTIFICATES
	DELETE FROM @TempID
	INSERT INTO @TempID(ID, ID2)
	SELECT GIFT_CERTIFICATE_ID, ORIGINALTRANSACTIONTYPE FROM TRANSACTIONS (NOLOCK)
	WHERE TRANSACTION_ID IN (SELECT TRANSACTION_ID FROM @TxDetail) AND GIFT_CERTIFICATE_ID > 0
	IF EXISTS(SELECT ID FROM @TempID) BEGIN
		SELECT GIFT_CERTIFICATE_ID, STATUS INTO rollbackdb.dbo.ANE_100XXX_GIFT_CERTIFICATES FROM GIFT_CERTIFICATES (NOLOCK)
		WHERE GIFT_CERTIFICATE_ID IN (SELECT ID FROM @TempID)

		UPDATE GIFT_CERTIFICATES SET STATUS = CASE WHEN T.ID2 = 52 THEN 2 ELSE 3 END
		FROM @TempID T
		WHERE GIFT_CERTIFICATE_ID = T.ID
	END

	--CUSTOMERSCHOLARSHIP
	DELETE FROM @TempID
	INSERT INTO @TempID(ID)
	SELECT CUSTOMERSCHOLARSHIP_ID FROM CUSTOMERSCHOLARSHIP (NOLOCK)
	WHERE RECEIPTDETAIL_ID IN (SELECT RECEIPTDETAIL_ID FROM @TxDetail)
	IF EXISTS(SELECT ID FROM @TempID) BEGIN
		SELECT * INTO rollbackdb.dbo.ANE_100XXX_CUSTOMERSCHOLARSHIP FROM CUSTOMERSCHOLARSHIP (NOLOCK)
		WHERE CUSTOMERSCHOLARSHIP_ID IN (SELECT ID FROM @TempID)

		DELETE FROM CUSTOMERSCHOLARSHIP
		WHERE CUSTOMERSCHOLARSHIP_ID IN (SELECT ID FROM @TempID)
	END

	--FACILITY_SCHEDULE_CHECKINOUT
	DELETE FROM @TempID
	INSERT INTO @TempID(ID)
	SELECT ID FROM FACILITY_SCHEDULE_CHECKINOUT (NOLOCK)
	WHERE FACILITY_SCHEDULE_ID IN (
			SELECT FACILITY_SCHEDULE_ID FROM FACILITY_SCHEDULES
			WHERE TRANSACTION_ID IN (SELECT TRANSACTION_ID FROM @TxDetail)
		)
	IF EXISTS(SELECT ID FROM @TempID) BEGIN
		SELECT * INTO rollbackdb.dbo.ANE_100XXX_FACILITY_SCHEDULE_CHECKINOUT FROM FACILITY_SCHEDULE_CHECKINOUT (NOLOCK)
		WHERE ID IN (SELECT ID FROM @TempID)

		DELETE FROM FACILITY_SCHEDULE_CHECKINOUT
		WHERE ID IN (SELECT ID FROM @TempID)
	END	

	--ACTIVITYATTENDANCE
	DELETE FROM @TempID
	INSERT INTO @TempID(ID)
	SELECT ACTIVITYATTENDANCE_ID FROM ACTIVITYATTENDANCE (NOLOCK)
	WHERE FACILITY_SCHEDULE_ID IN (
			SELECT FACILITY_SCHEDULE_ID FROM FACILITY_SCHEDULES
			WHERE TRANSACTION_ID IN (SELECT TRANSACTION_ID FROM @TxDetail)
		)
	IF EXISTS(SELECT ID FROM @TempID) BEGIN
		SELECT * INTO rollbackdb.dbo.ANE_100XXX_ACTIVITYATTENDANCE FROM ACTIVITYATTENDANCE (NOLOCK)
		WHERE ACTIVITYATTENDANCE_ID IN (SELECT ID FROM @TempID)

		DELETE FROM ACTIVITYATTENDANCE
		WHERE ACTIVITYATTENDANCE_ID IN (SELECT ID FROM @TempID)
	END

	--FACILITY_SCHEDULES
	DELETE FROM @TempID
	INSERT INTO @TempID(ID)
	SELECT FACILITY_SCHEDULE_ID FROM FACILITY_SCHEDULES (NOLOCK)
	WHERE TRANSACTION_ID IN (SELECT TRANSACTION_ID FROM @TxDetail)
	IF EXISTS(SELECT ID FROM @TempID) BEGIN
		SELECT * INTO rollbackdb.dbo.ANE_100XXX_FACILITY_SCHEDULES FROM FACILITY_SCHEDULES (NOLOCK)
		WHERE FACILITY_SCHEDULE_ID IN (SELECT ID FROM @TempID)

		DELETE FROM FACILITY_SCHEDULES
		WHERE FACILITY_SCHEDULE_ID IN (SELECT ID FROM @TempID)
	END

	--LOCKER_SCHEDULES
	DELETE FROM @TempID
	INSERT INTO @TempID(ID)
	SELECT LOCKER_SCHEDULE_ID FROM LOCKER_SCHEDULES (NOLOCK)
	WHERE TRANSACTION_ID IN (SELECT TRANSACTION_ID FROM @TxDetail)
	IF EXISTS(SELECT ID FROM @TempID) BEGIN
		SELECT * INTO rollbackdb.dbo.ANE_100XXX_LOCKER_SCHEDULES FROM LOCKER_SCHEDULES (NOLOCK)
		WHERE LOCKER_SCHEDULE_ID IN (SELECT ID FROM @TempID)

		DELETE FROM LOCKER_SCHEDULES
		WHERE LOCKER_SCHEDULE_ID IN (SELECT ID FROM @TempID)
	END

	--CAMPAIGN_SCHEDULED_DONATIONS
	DELETE FROM @TempID
	INSERT INTO @TempID(ID)
	SELECT CAMPAIGN_DONATION_SCHEDULE_ID FROM CAMPAIGN_SCHEDULED_DONATIONS (NOLOCK)
	WHERE RECEIPTHEADER_ID IS NULL
		AND CAMPAIGN_DONATION_ID IN (
			SELECT CAMPAIGN_DONATION_ID FROM CAMPAIGN_DONATIONS
			WHERE ORIGINAL_TRANSACTION_ID IN (SELECT TRANSACTION_ID FROM @TxDetail)
		)
	IF EXISTS(SELECT ID FROM @TempID) BEGIN
		SELECT * INTO rollbackdb.dbo.ANE_100XXX_CAMPAIGN_SCHEDULED_DONATIONS FROM CAMPAIGN_SCHEDULED_DONATIONS (NOLOCK)
		WHERE CAMPAIGN_DONATION_SCHEDULE_ID IN (SELECT ID FROM @TempID)

		DELETE FROM CAMPAIGN_SCHEDULED_DONATIONS
		WHERE CAMPAIGN_DONATION_SCHEDULE_ID IN (SELECT ID FROM @TempID)
	END

	--LINKEDCREDITS
	DELETE FROM @TempID
	INSERT INTO @TempID(ID)
	SELECT LINKED_CREDIT_ID FROM LINKEDCREDITS (NOLOCK)
	WHERE CUSTOMERACCOUNT_ID IN (
			SELECT CUSTOMERACCOUNT_ID FROM CUSTOMERACCOUNTS WHERE RECEIPTHEADER_ID IN (SELECT ID FROM @RHeader)
		)
	IF EXISTS(SELECT ID FROM @TempID) BEGIN
		SELECT * INTO rollbackdb.dbo.ANE_100XXX_LINKEDCREDITS FROM LINKEDCREDITS (NOLOCK)
		WHERE LINKED_CREDIT_ID IN (SELECT ID FROM @TempID)

		UPDATE LINKEDCREDITS
		SET UNLINKED = @voided, UNLINKED_DATE = @voidedon, UNLINKED_BY = @voidedby
		WHERE LINKED_CREDIT_ID IN (SELECT ID FROM @TempID)
	END

	UPDATE USAGE_FEE_TRANSACTIONS SET VOIDED = @voided WHERE RECEIPTHEADER_ID IN (SELECT ID FROM @RHeader)

	UPDATE TRANSACTIONCOUPONS SET REFUNDED = @voided WHERE TRANSACTION_ID IN (SELECT TRANSACTION_ID FROM @TxDetail)

	UPDATE MEMBERSHIP_USAGES SET VOIDEDBY = @voidedby, VOIDEDON = @voidedon
	WHERE RECEIPTHEADER_ID IN (SELECT ID FROM @RHeader)

	UPDATE DCREGISTRATIONCHANGES SET VOIDED = @voided, VOIDEDBY = @voidedby, VOIDEDON = @voidedon
	WHERE TRANSACTION_ID IN (SELECT TRANSACTION_ID FROM @TxDetail)

	PRINT char(10) + 'Done. Datafix deployed.'
COMMIT TRANSACTION
