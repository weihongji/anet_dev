/* Date Age Transactions as of */
DECLARE @AsOfDate AS SMALLDATETIME = CONVERT(varchar, GETDATE(), 112)

/* Clean temporary tables */
IF OBJECT_ID('tempdb..#aging_customer_t')     IS NOT NULL DROP TABLE #aging_customer_t
IF OBJECT_ID('tempdb..#aging_company_t')      IS NOT NULL DROP TABLE #aging_company_t
IF OBJECT_ID('tempdb..#aging_schedule')       IS NOT NULL DROP TABLE #aging_schedule
IF OBJECT_ID('tempdb..#aging_transaction')    IS NOT NULL DROP TABLE #aging_transaction
IF OBJECT_ID('tempdb..#aging_schedule_final') IS NOT NULL DROP TABLE #aging_schedule_final
IF OBJECT_ID('tempdb..#aging_detail')         IS NOT NULL DROP TABLE #aging_detail

SELECT ISNULL(MAX(ARTRANSACTIONS.ARSCHEDULEHEADER_ID),0) AS ARSCHEDULEHEADER_ID INTO #aging_customer_t
FROM ARTRANSACTIONS "ARTRANSACTIONS" JOIN ARTRANSACTIONS ARTRANSACTIONS_1 ON ARTRANSACTIONS.ORIGINALARTRANSACTION_ID=ARTRANSACTIONS_1.ARTRANSACTION_ID JOIN CUSTOMERS CUSTOMERS ON ARTRANSACTIONS.CUSTOMER_ID=CUSTOMERS.CUSTOMER_ID
WHERE ARTRANSACTIONS.VOIDED = 0 AND ARTRANSACTIONS_1.VOIDED = 0 AND ARTRANSACTIONS.COMPANY_ID IS NULL
	AND EXISTS(SELECT * FROM ARTRANSACTIONS ART WHERE ART.ARSCHEDULEHEADER_ID = ARTRANSACTIONS.ARSCHEDULEHEADER_ID AND ART.VOIDED = 0 GROUP BY ART.ARSCHEDULEHEADER_ID HAVING SUM(ART.AMOUNT) > 0)
GROUP BY ARTRANSACTIONS.ARSCHEDULEHEADER_ID HAVING SUM(ARTRANSACTIONS.AMOUNT) > 0

SELECT ISNULL(MAX(ARTRANSACTIONS.ARSCHEDULEHEADER_ID),0) AS ARSCHEDULEHEADER_ID INTO #aging_company_t
FROM ARTRANSACTIONS "ARTRANSACTIONS" JOIN ARTRANSACTIONS ARTRANSACTIONS_1 ON ARTRANSACTIONS.ORIGINALARTRANSACTION_ID=ARTRANSACTIONS_1.ARTRANSACTION_ID JOIN COMPANIES COMPANIES ON ARTRANSACTIONS.COMPANY_ID=COMPANIES.COMPANY_ID
WHERE ARTRANSACTIONS.VOIDED = 0 AND ARTRANSACTIONS_1.VOIDED = 0
	AND EXISTS(SELECT * FROM ARTRANSACTIONS ART WHERE ART.ARSCHEDULEHEADER_ID = ARTRANSACTIONS.ARSCHEDULEHEADER_ID AND ART.VOIDED = 0 GROUP BY ART.ARSCHEDULEHEADER_ID HAVING SUM(ART.AMOUNT) > 0)
GROUP BY ARTRANSACTIONS.ARSCHEDULEHEADER_ID HAVING SUM(ARTRANSACTIONS.AMOUNT) > 0

/* AR Aging Schedule */
SELECT ARSCHEDULEHEADER_ID, ARSCHEDULEDETAIL_ID, DATEDUE, TOTALDUE
	, CumulativeDue = (
		SELECT SUM(AMOUNTDUE) FROM ARSCHEDULEDETAIL
		WHERE ARSCHEDULEHEADER_ID = X.ARSCHEDULEHEADER_ID
			AND (DATEDUE < X.DATEDUE OR DATEDUE = X.DATEDUE AND ARSCHEDULEDETAIL_ID <= X.ARSCHEDULEDETAIL_ID)
	)
INTO #aging_schedule
FROM (
	SELECT (1) AS CLIENTTYPE, ARSCHEDULEHEADER.CUSTOMER_ID AS ID, (CUSTOMERS.LASTNAME + CUSTOMERS.FIRSTNAME) AS CUSTOMERNAME, (CUSTOMERS.LASTNAME + CUSTOMERS.FIRSTNAME) AS SORTNAME
		, ARSCHEDULEHEADER.ARSCHEDULEHEADER_ID, ARSCHEDULEDETAIL.DATEDUE AS DATEDUE
		, TOTALDUE = (CASE WHEN ARSCHEDULEDETAIL.INITIALPAYMENT <> 0 THEN ARSCHEDULEDETAIL.AMOUNTDUE+ISNULL((SELECT SUM(ARD.AMOUNTDUE) FROM ARSCHEDULEDETAIL ARD WHERE ARD.ARSCHEDULEHEADER_ID = ARSCHEDULEHEADER.ARSCHEDULEHEADER_ID AND ARD.VOIDED = 0 AND ARD.INITIALPAYMENT = 0 AND ARD.AMOUNTDUE < 0),0) ELSE ARSCHEDULEDETAIL.AMOUNTDUE  END)
		, ARSCHEDULEDETAIL.ARSCHEDULEDETAIL_ID
	FROM ARSCHEDULEHEADER
		JOIN ARSCHEDULEDETAIL ON ARSCHEDULEHEADER.ARSCHEDULEHEADER_ID=ARSCHEDULEDETAIL.ARSCHEDULEHEADER_ID
		JOIN ARTRANSACTIONS ARTRANSACTIONS ON ARSCHEDULEHEADER.ARSCHEDULEHEADER_ID=ARTRANSACTIONS.ARSCHEDULEHEADER_ID
		JOIN CUSTOMERS CUSTOMERS ON ARSCHEDULEHEADER.CUSTOMER_ID=CUSTOMERS.CUSTOMER_ID AND ARSCHEDULEHEADER.COMPANY_ID IS NULL
	WHERE 1=1
		--AND ARSCHEDULEHEADER.CUSTOMER_ID IN (147)
		AND (ARSCHEDULEHEADER.ARSCHEDULEHEADER_ID IN (SELECT ARSCHEDULEHEADER_ID FROM #AGING_CUSTOMER_T))
		AND ARSCHEDULEHEADER.VOIDED = 0 AND ARSCHEDULEDETAIL.VOIDED = 0 AND (ARSCHEDULEDETAIL.AMOUNTDUE > 0)
		AND (
			ARSCHEDULEHEADER.AMOUNT
				- (
					SELECT CASE WHEN SUM(LINKEDCREDITS.LINKED_AMOUNT) IS NULL THEN 0 ELSE SUM(LINKEDCREDITS.LINKED_AMOUNT) END AS AMOUNTLINKED FROM LINKEDCREDITS
					WHERE LINKEDCREDITS.ARSCHEDULEHEADER_ID = ARSCHEDULEHEADER.ARSCHEDULEHEADER_ID AND LINKEDCREDITS.UNLINKED=0
				)
		) <> 0
	UNION
	SELECT (2) AS CLIENTTYPE, ARSCHEDULEHEADER.COMPANY_ID AS ID, COMPANIES.COMPANYNAME AS CUSTOMERNAME, COMPANIES.COMPANYNAME AS SORTNAME
		, ARSCHEDULEHEADER.ARSCHEDULEHEADER_ID, ARSCHEDULEDETAIL.DATEDUE AS DATEDUE
		, TOTALDUE = (CASE WHEN ARSCHEDULEDETAIL.INITIALPAYMENT <> 0 THEN ARSCHEDULEDETAIL.AMOUNTDUE+ISNULL((SELECT SUM(ARD.AMOUNTDUE) FROM ARSCHEDULEDETAIL ARD WHERE ARD.ARSCHEDULEHEADER_ID = ARSCHEDULEHEADER.ARSCHEDULEHEADER_ID AND ARD.VOIDED = 0 AND ARD.INITIALPAYMENT = 0 AND ARD.AMOUNTDUE < 0),0) ELSE ARSCHEDULEDETAIL.AMOUNTDUE  END)
		, ARSCHEDULEDETAIL.ARSCHEDULEDETAIL_ID
	FROM ARSCHEDULEHEADER "ARSCHEDULEHEADER" JOIN ARSCHEDULEDETAIL ARSCHEDULEDETAIL ON ARSCHEDULEHEADER.ARSCHEDULEHEADER_ID=ARSCHEDULEDETAIL.ARSCHEDULEHEADER_ID JOIN ARTRANSACTIONS ARTRANSACTIONS ON ARSCHEDULEHEADER.ARSCHEDULEHEADER_ID=ARTRANSACTIONS.ARSCHEDULEHEADER_ID JOIN COMPANIES COMPANIES ON ARSCHEDULEHEADER.COMPANY_ID=COMPANIES.COMPANY_ID
	WHERE 1=1
		--AND ARSCHEDULEHEADER.CUSTOMER_ID IN (147)
		AND (ARSCHEDULEHEADER.ARSCHEDULEHEADER_ID IN (SELECT ARSCHEDULEHEADER_ID FROM #AGING_COMPANY_T)) AND ARSCHEDULEHEADER.VOIDED = 0 AND ARSCHEDULEDETAIL.VOIDED = 0 AND (ARSCHEDULEDETAIL.AMOUNTDUE > 0) AND ((ARSCHEDULEHEADER.AMOUNT - (SELECT CASE WHEN SUM(LINKEDCREDITS.LINKED_AMOUNT) IS NULL THEN 0 ELSE SUM(LINKEDCREDITS.LINKED_AMOUNT) END AS AMOUNTLINKED FROM LINKEDCREDITS WHERE LINKEDCREDITS.ARSCHEDULEHEADER_ID = ARSCHEDULEHEADER.ARSCHEDULEHEADER_ID AND LINKEDCREDITS.UNLINKED=0)) <> 0)
) AS X


/* AR Aging Transactions */
DELETE FROM #aging_customer_t WHERE ARSCHEDULEHEADER_ID NOT IN (SELECT ARSCHEDULEHEADER_ID FROM #aging_schedule)
DELETE FROM #aging_company_t WHERE ARSCHEDULEHEADER_ID NOT IN (SELECT ARSCHEDULEHEADER_ID FROM #aging_schedule)

SELECT *, Paid = CASE WHEN TotalCharges + WithdrawAmount > 0 THEN TotalCharges - BalanceDue + WithdrawAmount ELSE TotalCharges - BalanceDue END
INTO #aging_transaction
FROM (
	SELECT ARSCHEDULEHEADER.ARSCHEDULEHEADER_ID, MAX(ARSCHEDULEHEADER.CUSTOMER_ID) AS ID, MAX(- ARSCHEDULEHEADER.CUSTOMER_ID) AS CLIENTID, MAX(1) AS CLIENTTYPE
		, CUSTOMERNAME = MAX(CUSTOMERS.LASTNAME + ', ' +CASE WHEN CUSTOMER_TITLES.DESCRIPTION IS NULL OR LEN(CUSTOMER_TITLES.DESCRIPTION) = 0 THEN '' ELSE CUSTOMER_TITLES.DESCRIPTION + ' 'END  + CUSTOMERS.FIRSTNAME + CASE WHEN CUSTOMERS.MIDDLENAME IS NULL OR LEN(CUSTOMERS.MIDDLENAME) = 0 THEN '' ELSE ' ' + CUSTOMERS.MIDDLENAME END )
		, MAX(CUSTOMERS.LASTNAME + CUSTOMERS.FIRSTNAME) AS SORTNAME
		, SUM(ARTRANSACTIONS.AMOUNT) AS BALANCEDUE
		, MIN(RECEIPTHEADERS.RECEIPTHEADER_ID) AS RECEIPTHEADER_ID
		, MIN(RECEIPTHEADERS.RECEIPTNUMBER) AS RECEIPTNUMBER
		, MIN(RECEIPTHEADERS.DATESTAMP) AS RECEIPTDATE
		, MAX(ARSCHEDULEHEADER.AMOUNT) AS TOTALCHARGES
		, WITHDRAWAMOUNT = (
			SELECT ISNULL(SUM(ARTRANSACTIONS.AMOUNT), 0)
			FROM ARTRANSACTIONS
				JOIN ARTRANSACTIONS ARTRANSACTIONS_1 ON ARTRANSACTIONS.ORIGINALARTRANSACTION_ID=ARTRANSACTIONS_1.ARTRANSACTION_ID
				JOIN RECEIPTHEADERS ON RECEIPTHEADERS.RECEIPTHEADER_ID = ARTRANSACTIONS.RECEIPTHEADER_ID
				JOIN RECEIPTDETAILS RECEIPTDETAILS ON RECEIPTDETAILS.RECEIPTDETAIL_ID = ARTRANSACTIONS.RECEIPTDETAIL_ID
				JOIN TRANSACTIONS TRANSACTIONS  ON TRANSACTIONS.TRANSACTION_ID = RECEIPTDETAILS.TRANSACTION_ID
				JOIN CUSTOMERS CUSTOMERS ON ARTRANSACTIONS.CUSTOMER_ID=CUSTOMERS.CUSTOMER_ID
			WHERE ARTRANSACTIONS.VOIDED = 0 AND ARTRANSACTIONS_1.VOIDED = 0 AND ARTRANSACTIONS.ARSCHEDULEHEADER_ID = ARSCHEDULEHEADER.ARSCHEDULEHEADER_ID
				AND ARTRANSACTIONS.ARTRANSACTION_ID NOT IN (SELECT ARTRANSACTION_ID FROM LINK_THIRD_PARTY_BILLINGS)
				AND TRANSACTIONS.PERMIT_ID  IS NULL AND TRANSACTIONS.DCPROGRAM_ID IS NULL AND ARTRANSACTIONS.TRANSACTIONTYPE IN (4)
		)
	FROM ARSCHEDULEHEADER "ARSCHEDULEHEADER"
		JOIN ARTRANSACTIONS ARTRANSACTIONS ON ARSCHEDULEHEADER.ARSCHEDULEHEADER_ID=ARTRANSACTIONS.ARSCHEDULEHEADER_ID
		JOIN RECEIPTDETAILS RECEIPTDETAILS ON ARTRANSACTIONS.RECEIPTDETAIL_ID=RECEIPTDETAILS.RECEIPTDETAIL_ID
		JOIN ARTRANSACTIONS ARTRANSACTIONS_1 ON ARTRANSACTIONS.ORIGINALARTRANSACTION_ID=ARTRANSACTIONS_1.ARTRANSACTION_ID
		JOIN RECEIPTHEADERS RECEIPTHEADERS ON ARTRANSACTIONS.RECEIPTHEADER_ID=RECEIPTHEADERS.RECEIPTHEADER_ID
		LEFT JOIN TRANSACTIONS TRANSACTIONS ON RECEIPTDETAILS.TRANSACTION_ID=TRANSACTIONS.TRANSACTION_ID
		LEFT JOIN EQUIPMENTLENDINGTRANSACTIONS EQUIPMENTLENDINGTRANSACTIONS ON TRANSACTIONS.TRANSACTION_ID=EQUIPMENTLENDINGTRANSACTIONS.TRANSACTION_ID
		JOIN CUSTOMERS CUSTOMERS ON ARSCHEDULEHEADER.CUSTOMER_ID=CUSTOMERS.CUSTOMER_ID
		LEFT JOIN CUSTOMER_TITLES CUSTOMER_TITLES ON CUSTOMER_TITLES.CUSTOMER_TITLE_ID=CUSTOMERS.CUSTOMER_TITLE_ID
	WHERE ARSCHEDULEHEADER.ARSCHEDULEHEADER_ID IN (SELECT ARSCHEDULEHEADER_ID FROM #AGING_CUSTOMER_T)
		--AND ARSCHEDULEHEADER.CUSTOMER_ID IN (147)
		AND ARSCHEDULEHEADER.ARSCHEDULEHEADER_ID IN (
			SELECT ARSCHEDULEHEADER_ID FROM ARSCHEDULEDETAIL "ARSCHEDULEDETAIL" WHERE VOIDED = 0 AND AMOUNTDUE > 0 AND ARSCHEDULEDETAIL.ARSCHEDULEHEADER_ID = ARSCHEDULEHEADER.ARSCHEDULEHEADER_ID GROUP BY ARSCHEDULEHEADER_ID
		)
		AND ARTRANSACTIONS.VOIDED = 0 AND ARTRANSACTIONS_1.VOIDED = 0 AND RECEIPTDETAILS.VOIDED = 0
	GROUP BY ARSCHEDULEHEADER.ARSCHEDULEHEADER_ID
	UNION
	SELECT ARSCHEDULEHEADER.ARSCHEDULEHEADER_ID, MAX(ARSCHEDULEHEADER.COMPANY_ID) AS ID, MAX(ARSCHEDULEHEADER.COMPANY_ID) AS CLIENTID, ISNULL(MAX(2),0) AS CLIENTTYPE
		, MAX(COMPANIES.COMPANYNAME) AS CUSTOMERNAME
		, MAX(COMPANIES.COMPANYNAME) AS SORTNAME
		, SUM(ARTRANSACTIONS.AMOUNT) AS BALANCEDUE
		, MIN(RECEIPTHEADERS.RECEIPTHEADER_ID) AS RECEIPTHEADER_ID
		, MIN(RECEIPTHEADERS.RECEIPTNUMBER) AS RECEIPTNUMBER
		, MIN(RECEIPTHEADERS.DATESTAMP) AS RECEIPTDATE
		, MAX(ARSCHEDULEHEADER.AMOUNT) AS TOTALCHARGES
		, WITHDRAWAMOUNT = (SELECT ISNULL(SUM(ARTRANSACTIONS.AMOUNT), 0) FROM ARTRANSACTIONS JOIN ARTRANSACTIONS ARTRANSACTIONS_1 ON ARTRANSACTIONS.ORIGINALARTRANSACTION_ID=ARTRANSACTIONS_1.ARTRANSACTION_ID  JOIN RECEIPTHEADERS ON RECEIPTHEADERS.RECEIPTHEADER_ID = ARTRANSACTIONS.RECEIPTHEADER_ID   JOIN RECEIPTDETAILS RECEIPTDETAILS ON RECEIPTDETAILS.RECEIPTDETAIL_ID = ARTRANSACTIONS.RECEIPTDETAIL_ID    JOIN TRANSACTIONS TRANSACTIONS  ON TRANSACTIONS.TRANSACTION_ID = RECEIPTDETAILS.TRANSACTION_ID   JOIN COMPANIES COMPANIES ON ARTRANSACTIONS.COMPANY_ID=COMPANIES.COMPANY_ID  WHERE ARTRANSACTIONS.VOIDED = 0 AND ARTRANSACTIONS_1.VOIDED = 0 AND ARTRANSACTIONS.ARSCHEDULEHEADER_ID = ARSCHEDULEHEADER.ARSCHEDULEHEADER_ID AND ARTRANSACTIONS.ARTRANSACTION_ID NOT IN (SELECT ARTRANSACTION_ID FROM LINK_THIRD_PARTY_BILLINGS) AND TRANSACTIONS.PERMIT_ID  IS NULL AND TRANSACTIONS.DCPROGRAM_ID IS NULL AND ARTRANSACTIONS.TRANSACTIONTYPE IN (4))
	FROM ARSCHEDULEHEADER "ARSCHEDULEHEADER" JOIN ARTRANSACTIONS ARTRANSACTIONS ON ARSCHEDULEHEADER.ARSCHEDULEHEADER_ID=ARTRANSACTIONS.ARSCHEDULEHEADER_ID JOIN RECEIPTDETAILS RECEIPTDETAILS ON ARTRANSACTIONS.RECEIPTDETAIL_ID=RECEIPTDETAILS.RECEIPTDETAIL_ID JOIN ARTRANSACTIONS ARTRANSACTIONS_1 ON ARTRANSACTIONS.ORIGINALARTRANSACTION_ID=ARTRANSACTIONS_1.ARTRANSACTION_ID JOIN RECEIPTHEADERS RECEIPTHEADERS ON ARTRANSACTIONS.RECEIPTHEADER_ID=RECEIPTHEADERS.RECEIPTHEADER_ID LEFT JOIN TRANSACTIONS TRANSACTIONS ON RECEIPTDETAILS.TRANSACTION_ID=TRANSACTIONS.TRANSACTION_ID LEFT JOIN EQUIPMENTLENDINGTRANSACTIONS EQUIPMENTLENDINGTRANSACTIONS ON TRANSACTIONS.TRANSACTION_ID=EQUIPMENTLENDINGTRANSACTIONS.TRANSACTION_ID JOIN COMPANIES COMPANIES ON ARSCHEDULEHEADER.COMPANY_ID=COMPANIES.COMPANY_ID
	WHERE (ARSCHEDULEHEADER.ARSCHEDULEHEADER_ID IN (SELECT ARSCHEDULEHEADER_ID FROM #AGING_COMPANY_T))
		--AND ARSCHEDULEHEADER.CUSTOMER_ID IN (147)
		AND ARSCHEDULEHEADER.ARSCHEDULEHEADER_ID IN (SELECT ARSCHEDULEHEADER_ID FROM ARSCHEDULEDETAIL "ARSCHEDULEDETAIL" WHERE VOIDED = 0 AND AMOUNTDUE > 0 AND ARSCHEDULEDETAIL.ARSCHEDULEHEADER_ID = ARSCHEDULEHEADER.ARSCHEDULEHEADER_ID GROUP BY ARSCHEDULEHEADER_ID) AND ARTRANSACTIONS.VOIDED = 0 AND ARTRANSACTIONS_1.VOIDED = 0 AND RECEIPTDETAILS.VOIDED = 0 GROUP BY ARSCHEDULEHEADER.ARSCHEDULEHEADER_ID
) AS X

SELECT *
	, DUE_01_30 = CASE WHEN DATEDIFF(DAY, DATEDUE, @AsOfDate) BETWEEN  1 AND 30 THEN ACTUALDUE ELSE 0.00 END
	, DUE_31_60 = CASE WHEN DATEDIFF(DAY, DATEDUE, @AsOfDate) BETWEEN 31 AND 60 THEN ACTUALDUE ELSE 0.00 END
	, DUE_61_90 = CASE WHEN DATEDIFF(DAY, DATEDUE, @AsOfDate) BETWEEN 61 AND 90 THEN ACTUALDUE ELSE 0.00 END
	, DUE_91_ON = CASE WHEN DATEDIFF(DAY, DATEDUE, @AsOfDate) >= 91 THEN ACTUALDUE ELSE 0.00 END
INTO #aging_schedule_final
FROM (
	SELECT S.*
		, ACTUALDUE = CASE WHEN S.CUMULATIVEDUE - S.TOTALDUE - T.PAID > 0 THEN S.TOTALDUE WHEN S.CUMULATIVEDUE - T.PAID > 0 THEN S.CUMULATIVEDUE - T.PAID ELSE 0.00 END
	FROM #aging_schedule S
		INNER JOIN #aging_transaction T ON S.ARSCHEDULEHEADER_ID = T.ARSCHEDULEHEADER_ID
) AS X

SELECT T.ID AS [Customer ID], T.CUSTOMERNAME AS [Customer Name], RECEIPTNUMBER AS [Receipt #], RECEIPTDATE AS [Date]

	, FutureAR = (
			SELECT isnull(SUM(l.AMOUNT),0)
				FROM GL_LEDGER L
					JOIN GLACCOUNTS A ON L.GLACCOUNT_ID=A.GLACCOUNT_ID
					LEFT JOIN RECEIPTDETAILS RD ON RD.RECEIPTDETAIL_ID = L.RECEIPTDETAIL_ID
					LEFT JOIN RECEIPTDETAILS RD2 ON RD2.RECEIPTDETAIL_ID = RD.ORIGINALRECEIPTDETAIL_ID
				WHERE A.SYSTEM_ACCOUNT = 12 AND L.VOIDED = 0 AND L.ARSCHEDULEHEADER_ID = T.ARSCHEDULEHEADER_ID
		)
	, AR = (
			SELECT ISNULL(SUM(L.AMOUNT),0)
			FROM GL_LEDGER L
				JOIN GLACCOUNTS A ON L.GLACCOUNT_ID=A.GLACCOUNT_ID
				LEFT JOIN RECEIPTDETAILS RD ON RD.RECEIPTDETAIL_ID = L.RECEIPTDETAIL_ID
				LEFT JOIN RECEIPTDETAILS RD2 ON RD2.RECEIPTDETAIL_ID = RD.ORIGINALRECEIPTDETAIL_ID
			WHERE A.SYSTEM_ACCOUNT = 4 AND L.VOIDED = 0 AND L.ARSCHEDULEHEADER_ID = T.ARSCHEDULEHEADER_ID
		)
	, A.Days_1_30, A.Days_31_60, A.Days_61_90, A.Days_Over_90
	, CASE
			WHEN TRANSACTIONS.TRANSACTION_ID IS NULL THEN 'None'
			WHEN TRANSACTIONS.ACTIVITY_ID IS NOT NULL  THEN 'Activity'
			WHEN TRANSACTIONS.DCPROGRAM_ID IS NOT NULL THEN 'FlexReg'
			WHEN TRANSACTIONS.PERMIT_ID IS NOT NULL OR TRANSACTIONS.LOCKER_ID IS NOT NULL THEN 'Other'
			WHEN TRANSACTIONS.POSPRODUCT_ID IS NOT NULL THEN 'POS'
			WHEN TRANSACTIONS.TRANSACTIONTYPE IN (61) OR TRANSACTIONS.ORIGINALTRANSACTIONTYPE IN (61) THEN 'Membership'--USAGE FEE
			WHEN TRANSACTIONS.TRANSACTIONTYPE IN (23, 60) OR TRANSACTIONS.ORIGINALTRANSACTIONTYPE IN (23, 60) THEN 'Account'
			ELSE CAST(TRANSACTIONS.TRANSACTIONTYPE AS VARCHAR(10))
		END AS Module
	, ARTRANSACTIONS.DESCRIPTION
	, GLACCOUNTS.ACCOUNTNAME AS [GL Account]
	, SITES.SITENAME AS Branch
	, T.ARSCHEDULEHEADER_ID
	, T.WithdrawAmount
	, RECEIPTDETAILS.RECEIPTDETAIL_ID
	, CLIENTTYPE, SORTNAME, ID
INTO #aging_detail
FROM #aging_transaction T
	INNER JOIN (
		SELECT ARSCHEDULEHEADER_ID, SUM(DUE_01_30) AS Days_1_30, SUM(DUE_31_60) AS Days_31_60, SUM(DUE_61_90) AS Days_61_90, SUM(DUE_91_ON) AS Days_Over_90
		FROM #aging_schedule_final
		GROUP BY ARSCHEDULEHEADER_ID
	) AS A ON T.ARSCHEDULEHEADER_ID = A.ARSCHEDULEHEADER_ID

	INNER JOIN TRANSACTIONS ON TRANSACTIONS.RECEIPTHEADER_ID = T.RECEIPTHEADER_ID
	INNER JOIN RECEIPTDETAILS ON RECEIPTDETAILS.TRANSACTION_ID = TRANSACTIONS.TRANSACTION_ID
	INNER JOIN GLACCOUNTS ON GLACCOUNTS.GLACCOUNT_ID = RECEIPTDETAILS.GLACCOUNT_ID
	INNER JOIN SITES ON SITES.SITE_ID = RECEIPTDETAILS.REVENUE_SITE_ID
	INNER JOIN ARTRANSACTIONS ON ARTRANSACTIONS.RECEIPTDETAIL_ID = RECEIPTDETAILS.RECEIPTDETAIL_ID

/* Withdraw Amount */
UPDATE #aging_detail SET WithdrawAmount = ABS(WithdrawAmount) WHERE WithdrawAmount < 0
--1-30
UPDATE #aging_detail SET Days_1_30 = CASE WHEN WithdrawAmount >= Days_1_30 THEN 0.0 ELSE Days_1_30 - WithdrawAmount END
	, WithdrawAmount = CASE WHEN WithdrawAmount >= Days_1_30 THEN WithdrawAmount - Days_1_30 ELSE 0.0 END
WHERE WithdrawAmount > 0
--31-60
UPDATE #aging_detail SET Days_31_60 = CASE WHEN WithdrawAmount >= Days_31_60 THEN 0.0 ELSE Days_31_60 - WithdrawAmount END
	, WithdrawAmount = CASE WHEN WithdrawAmount >= Days_31_60 THEN WithdrawAmount - Days_31_60 ELSE 0.0 END
WHERE WithdrawAmount > 0
--61-90
UPDATE #aging_detail SET Days_61_90 = CASE WHEN WithdrawAmount >= Days_61_90 THEN 0.0 ELSE Days_61_90 - WithdrawAmount END
	, WithdrawAmount = CASE WHEN WithdrawAmount >= Days_61_90 THEN WithdrawAmount - Days_61_90 ELSE 0.0 END
WHERE WithdrawAmount > 0
--over 90
UPDATE #aging_detail SET Days_Over_90 = CASE WHEN WithdrawAmount >= Days_Over_90 THEN 0.0 ELSE Days_Over_90 - WithdrawAmount END
	, WithdrawAmount = CASE WHEN WithdrawAmount >= Days_Over_90 THEN WithdrawAmount - Days_Over_90 ELSE 0.0 END
WHERE WithdrawAmount > 0

/*Final Query*/
SELECT D.[Customer ID], D.[Customer Name], D.[Receipt #], D.Date, D.FutureAR, D.AR, D.Days_1_30, D.Days_31_60, D.Days_61_90, D.Days_Over_90, D.Module, D.DESCRIPTION, D.[GL Account], D.Branch
FROM #aging_detail D
	INNER JOIN (
		SELECT ARSCHEDULEHEADER_ID, MIN(RECEIPTDETAIL_ID) AS RECEIPTDETAIL_ID FROM #aging_detail GROUP BY ARSCHEDULEHEADER_ID
	) AS S ON D.ARSCHEDULEHEADER_ID = S.ARSCHEDULEHEADER_ID AND D.RECEIPTDETAIL_ID = S.RECEIPTDETAIL_ID
ORDER BY CLIENTTYPE, SORTNAME, ID, D.ARSCHEDULEHEADER_ID

IF OBJECT_ID('tempdb..#aging_customer_t')     IS NOT NULL DROP TABLE #aging_customer_t
IF OBJECT_ID('tempdb..#aging_company_t')      IS NOT NULL DROP TABLE #aging_company_t
IF OBJECT_ID('tempdb..#aging_schedule')       IS NOT NULL DROP TABLE #aging_schedule
IF OBJECT_ID('tempdb..#aging_transaction')    IS NOT NULL DROP TABLE #aging_transaction
IF OBJECT_ID('tempdb..#aging_schedule_final') IS NOT NULL DROP TABLE #aging_schedule_final
IF OBJECT_ID('tempdb..#aging_detail')         IS NOT NULL DROP TABLE #aging_detail

