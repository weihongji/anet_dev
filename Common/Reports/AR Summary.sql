SELECT (0) as FOR_CREDIT, max(ARTRANSACTIONS.RECEIPTHEADER_ID) AS RECEIPTHEADER_ID, max(ARTRANSACTIONS.ARSCHEDULEHEADER_ID) AS ARSCHEDULEHEADER_ID
	, RECEIPTNUMBER = (select rh.RECEIPTNUMBER from RECEIPTHEADERS rh  join TRANSACTIONS t on t.RECEIPTHEADER_ID = rh.RECEIPTHEADER_ID join RECEIPTDETAILS rd on rd.TRANSACTION_ID = t.TRANSACTION_ID where rd.RECEIPTDETAIL_ID = receiptdetails.receiptdetail_id)
	, max(TRANSACTIONS.TRANSACTIONTYPE) AS TRANSACTIONTYPE, max(ARTRANSACTIONS.ARTRANSACTION_ID) AS ARTRANSACTION_ID, SUM(ARTRANSACTIONS.AMOUNT) AS Balance, receiptdetails.receiptdetail_id AS rd_id
	, doubled = (select max(art.ARSCHEDULEHEADER_ID) from ARTRANSACTIONS art join RECEIPTDETAILS rd on rd.RECEIPTDETAIL_ID = art.RECEIPTDETAIL_ID where rd.originalreceiptdetail_id = receiptdetails.originalreceiptdetail_id)
	, arh_linked = (select count(distinct art.ARSCHEDULEHEADER_ID) from ARTRANSACTIONS art where art.receiptdetail_id = receiptdetails.originalreceiptdetail_id)
	, thisAmountDue = (select arh.AMOUNT from ARSCHEDULEHEADER arh where arh.ARSCHEDULEHEADER_ID = Max(artransactions.arscheduleheader_id))
	, totalAmountDue = (select isnull(sum(arh.AMOUNT),0) from ARSCHEDULEHEADER arh where arh.ARSCHEDULEHEADER_ID in (select art.ARSCHEDULEHEADER_ID from ARTRANSACTIONS art where art.RECEIPTDETAIL_ID = receiptdetails.receiptdetail_id group by art.ARSCHEDULEHEADER_ID))
	, RDFutureAR = (SELECT isnull(SUM(l.AMOUNT),0) FROM GL_LEDGER l JOIN GLACCOUNTS a ON l.GLACCOUNT_ID=a.GLACCOUNT_ID join receiptdetails rd on rd.receiptdetail_id = l.receiptdetail_id join ARTRANSACTIONS art on art.RECEIPTDETAIL_ID=l.RECEIPTDETAIL_ID WHERE a.SYSTEM_ACCOUNT = 12 and l.voided = 0 and (rd.ORIGINALRECEIPTDETAIL_ID = receiptdetails.receiptdetail_id or rd.ORIGINALRECEIPTDETAIL_ID = receiptdetails.ORIGINALRECEIPTDETAIL_ID) and art.ARSCHEDULEHEADER_ID=Max(artransactions.arscheduleheader_id) )
	, RDAR = (SELECT isnull(SUM(l.AMOUNT),0) FROM GL_LEDGER l JOIN GLACCOUNTS a ON l.GLACCOUNT_ID=a.GLACCOUNT_ID join receiptdetails rd on rd.receiptdetail_id = l.receiptdetail_id join ARTRANSACTIONS art on art.RECEIPTDETAIL_ID=l.RECEIPTDETAIL_ID WHERE a.SYSTEM_ACCOUNT = 4 and l.voided = 0 and (rd.ORIGINALRECEIPTDETAIL_ID = receiptdetails.receiptdetail_id or rd.ORIGINALRECEIPTDETAIL_ID = receiptdetails.ORIGINALRECEIPTDETAIL_ID) and art.ARSCHEDULEHEADER_ID=Max(artransactions.arscheduleheader_id) )
	, FutureAR = (
			SELECT isnull(SUM(l.AMOUNT),0)
				FROM GL_LEDGER l
					JOIN GLACCOUNTS a ON l.GLACCOUNT_ID=a.GLACCOUNT_ID
					LEFT JOIN RECEIPTDETAILS rd ON rd.RECEIPTDETAIL_ID = l.RECEIPTDETAIL_ID
					LEFT JOIN RECEIPTDETAILS rd2 ON rd2.RECEIPTDETAIL_ID = rd.ORIGINALRECEIPTDETAIL_ID
				WHERE a.SYSTEM_ACCOUNT = 12 and l.voided = 0 and l.ARSCHEDULEHEADER_ID = arscheduleheader.arscheduleheader_id
		)
	, AR = (
			SELECT isnull(SUM(l.AMOUNT),0)
			FROM GL_LEDGER l
				JOIN GLACCOUNTS a ON l.GLACCOUNT_ID=a.GLACCOUNT_ID
				LEFT JOIN RECEIPTDETAILS rd ON rd.RECEIPTDETAIL_ID = l.RECEIPTDETAIL_ID
				LEFT JOIN RECEIPTDETAILS rd2 ON rd2.RECEIPTDETAIL_ID = rd.ORIGINALRECEIPTDETAIL_ID
			WHERE a.SYSTEM_ACCOUNT = 4 and l.voided = 0 and l.ARSCHEDULEHEADER_ID = arscheduleheader.arscheduleheader_id
		)
	, TRANSACTIONS.PACKAGE_ID AS PACKAGE_ID, DCPROGRAMS.PROGRAMTYPE_ID AS PROGRAMTYPE_ID, TRANSACTIONS.DCPROGRAM_ID AS DCPROGRAM_ID, MAX(CUSTOMERS.Customer_ID) AS CID, (0) AS CustomerCompanyGroup
	, CName = MAX(Customers.LastName + ', ' +case when CUSTOMER_TITLES.DESCRIPTION is null or len(CUSTOMER_TITLES.DESCRIPTION) = 0 then '' else CUSTOMER_TITLES.DESCRIPTION + ' 'end  + Customers.FirstName + case when Customers.middlename is null or len(Customers.middlename) = 0 then '' else ' ' + Customers.middlename end )
	, MAX(CUSTOMERS.Address1 + ' ' + CUSTOMERS.Address2) AS Address, Max(CUSTOMERS.MailingAddress1) AS MailingAddress1, Max(CUSTOMERS.MailingAddress2) AS MailingAddress2
	, MAX(Customers.MailingCity + ', ' + Customers.MailingState + ' ' + Customers.MailingZipCode) AS mCityStateZip, MAX(Customers.City + ', ' + Customers.State + ' ' + Customers.ZipCode) AS CityStateZip
	, Max(Customers.retired) AS retired, (case WHEN MAX(rStates.country) is null THEN MAX(CUSTOMERS.country) else MAX(rStates.country) end) AS Country
	, (case WHEN MAX(mStates.country) is null THEN MAX(CUSTOMERS.MAILINGCOUNTRY) else MAX(mStates.country) end) AS mCountry, MAX(CUSTOMERS.HomePhone) AS Phone
	, CreditOnAccount = ((Select isnull(SUM(CUSTOMERACCOUNTS.AMOUNT),0) from CUSTOMERACCOUNTS left join LINKEDCREDITS lc on lc.CUSTOMERACCOUNT_ID = CUSTOMERACCOUNTS.CUSTOMERACCOUNT_ID where CUSTOMERACCOUNTS.Customer_ID=CUSTOMERS.Customer_ID and CUSTOMERACCOUNTS.CUSTOMERACCOUNT_ID not in ( select lc.CUSTOMERACCOUNT_ID from LINKEDCREDITS lc where lc.UNLINKED = 0 and lc.CUSTOMERACCOUNT_ID > 0)  AND ((CUSTOMERACCOUNTS.ExpirationDate = {ts '1899-12-30 00:00:00'} OR CUSTOMERACCOUNTS.ExpirationDate >= {ts '2015-09-30 14:35:14'}) AND CUSTOMERACCOUNTS.VOIDED=0)) + (select isnull(sum(lc.linked_amount),0)from LINKEDCREDITS lc where lc.CUSTOMERACCOUNT_ID is null and lc.CUSTOMER_ID = CUSTOMERS.CUSTOMER_ID and lc.UNLINKED = 0))
FROM ARTRANSACTIONS
	JOIN ARTRANSACTIONS ARTRANSACTIONS_1 ON ARTRANSACTIONS.ORIGINALARTRANSACTION_ID=ARTRANSACTIONS_1.ARTRANSACTION_ID
	LEFT JOIN ARSCHEDULEHEADER ARSCHEDULEHEADER ON ARTRANSACTIONS.ARSCHEDULEHEADER_ID=ARSCHEDULEHEADER.ARSCHEDULEHEADER_ID
	LEFT JOIN RECEIPTDETAILS RECEIPTDETAILS ON ARTRANSACTIONS_1.RECEIPTDETAIL_ID=RECEIPTDETAILS.RECEIPTDETAIL_ID
	LEFT JOIN TRANSACTIONS TRANSACTIONS ON RECEIPTDETAILS.TRANSACTION_ID=TRANSACTIONS.TRANSACTION_ID
	JOIN TRANSACTIONS OTRANSACTIONS ON TRANSACTIONS.ROOTTRANSACTION_ID=OTRANSACTIONS.TRANSACTION_ID
	LEFT JOIN EQUIPMENTLENDINGTRANSACTIONS EQUIPMENTLENDINGTRANSACTIONS ON OTRANSACTIONS.TRANSACTION_ID=EQUIPMENTLENDINGTRANSACTIONS.TRANSACTION_ID
	LEFT JOIN RECEIPTHEADERS RECEIPTHEADERS ON ARTRANSACTIONS.RECEIPTHEADER_ID=RECEIPTHEADERS.RECEIPTHEADER_ID
	LEFT JOIN PERMITS PERMITS ON ARSCHEDULEHEADER.PERMIT_ID=PERMITS.PERMIT_ID
	LEFT JOIN ACTIVITIES OACTIVITIES ON OTRANSACTIONS.ACTIVITY_ID=OACTIVITIES.ACTIVITY_ID
	LEFT JOIN SEASONS SEASONS ON SEASONS.SEASON_ID=OACTIVITIES.SEASON_ID
	LEFT JOIN CHILD_SEASONS CHILD_SEASONS ON CHILD_SEASONS.CHILD_SEASON_ID=OACTIVITIES.CHILD_SEASON_ID
	LEFT JOIN DCPROGRAMS DCPROGRAMS ON TRANSACTIONS.DCProgram_ID=DCPROGRAMS.DCProgram_ID
	JOIN CUSTOMERS CUSTOMERS ON ARTRANSACTIONS.CUSTOMER_ID=CUSTOMERS.CUSTOMER_ID and ARSCHEDULEHEADER.COMPANY_ID is null
	LEFT JOIN CUSTOMER_TITLES CUSTOMER_TITLES ON CUSTOMER_TITLES.CUSTOMER_TITLE_ID=CUSTOMERS.CUSTOMER_TITLE_ID
	LEFT JOIN (
			select (case when  LEN(STATE) = 0 then STATENAME else STATE end) as fixed_state,* from STATES
		) RSTATES ON CUSTOMERS.state=RSTATES.fixed_state
	LEFT JOIN (select (case when  LEN(STATE) = 0 then STATENAME else STATE end) as fixed_state,* from STATES) MSTATES ON CUSTOMERS.mailingstate=MSTATES.fixed_state
WHERE ARTRANSACTIONS.VOIDED = 0 AND ARTRANSACTIONS_1.VOIDED = 0
	AND customers.customer_id in (147)
GROUP BY CUSTOMERS.LASTNAME, CUSTOMERS.FIRSTNAME, CUSTOMERS.Customer_ID, RECEIPTDETAILS.RECEIPTDETAIL_ID, RECEIPTDETAILS.ORIGINALRECEIPTDETAIL_ID, ARSCHEDULEHEADER.ARSCHEDULEHEADER_ID
	, TRANSACTIONS.PACKAGE_ID, DCPROGRAMS.PROGRAMTYPE_ID, TRANSACTIONS.DCPROGRAM_ID
HAVING SUM(ARTRANSACTIONS.AMOUNT) <> 0
Union all
SELECT DISTINCT (1) as FOR_CREDIT, (0) AS RECEIPTHEADER_ID, 0 AS ARSCHEDULEHEADER_ID, max(RECEIPTHEADERS.RECEIPTNUMBER) AS RECEIPTNUMBER, 0 AS TRANSACTIONTYPE, 0 AS ARTRANSACTION_ID, 0 AS Balance, 0 AS rd_id, 0 AS doubled, 0 AS arh_linked, 0 AS thisAmountDue, 0 AS totalAmountDue, 0 AS RDFutureAR, 0 AS RDAR, 0 AS FutureAR, 0 AS AR, 0 AS PACKAGE_ID, 0 AS PROGRAMTYPE_ID, 0 AS DCPROGRAM_ID, (CUSTOMERS.Customer_ID) AS CID, (0) AS CustomerCompanyGroup, MAX(Customers.LastName + ', ' +case when CUSTOMER_TITLES.DESCRIPTION is null or len(CUSTOMER_TITLES.DESCRIPTION) = 0 then '' else CUSTOMER_TITLES.DESCRIPTION + ' 'end  + Customers.FirstName + case when Customers.middlename is null or len(Customers.middlename) = 0 then '' else ' ' + Customers.middlename end ) AS CName, MAX(CUSTOMERS.Address1 + ' ' + CUSTOMERS.Address2) AS Address, Max(CUSTOMERS.MailingAddress1) AS MailingAddress1, Max(CUSTOMERS.MailingAddress2) AS MailingAddress2, MAX(Customers.MailingCity + ', ' + Customers.MailingState + ' ' + Customers.MailingZipCode) AS mCityStateZip, MAX(Customers.City + ', ' + Customers.State + ' ' + Customers.ZipCode) AS CityStateZip, Max(Customers.retired) AS retired, (case WHEN MAX(rStates.country) is null THEN MAX(CUSTOMERS.country) else MAX(rStates.country) end) AS Country, (case WHEN MAX(mStates.country) is null THEN MAX(CUSTOMERS.MAILINGCOUNTRY) else MAX(mStates.country) end) AS mCountry, MAX(CUSTOMERS.HomePhone) AS Phone, ((Select isnull(SUM(CUSTOMERACCOUNTS.AMOUNT),0) from CUSTOMERACCOUNTS left join LINKEDCREDITS lc on lc.CUSTOMERACCOUNT_ID = CUSTOMERACCOUNTS.CUSTOMERACCOUNT_ID where CUSTOMERACCOUNTS.Customer_ID=CUSTOMERS.Customer_ID and CUSTOMERACCOUNTS.CUSTOMERACCOUNT_ID not in ( select lc.CUSTOMERACCOUNT_ID from LINKEDCREDITS lc where lc.UNLINKED = 0 and lc.CUSTOMERACCOUNT_ID > 0)  AND ((CUSTOMERACCOUNTS.ExpirationDate = {ts '1899-12-30 00:00:00'} OR CUSTOMERACCOUNTS.ExpirationDate >= {ts '2015-09-30 14:35:14'}) AND CUSTOMERACCOUNTS.VOIDED=0)) + (select isnull(sum(lc.linked_amount),0)from LINKEDCREDITS lc where lc.CUSTOMERACCOUNT_ID is null and lc.CUSTOMER_ID = CUSTOMERS.CUSTOMER_ID and lc.UNLINKED = 0)) AS CreditOnAccount FROM CUSTOMERS "CUSTOMERS" LEFT JOIN CUSTOMERACCOUNTS CUSTOMERACCOUNTS ON CUSTOMERS.CUSTOMER_ID=CUSTOMERACCOUNTS.CUSTOMER_ID LEFT JOIN RECEIPTHEADERS RECEIPTHEADERS ON CUSTOMERACCOUNTS.ReceiptHeader_ID=RECEIPTHEADERS.ReceiptHeader_ID LEFT JOIN TRANSACTIONS TRANSACTIONS ON RECEIPTHEADERS.ReceiptHeader_ID=TRANSACTIONS.ReceiptHeader_ID JOIN TRANSACTIONS OTRANSACTIONS ON TRANSACTIONS.ROOTTRANSACTION_ID=OTRANSACTIONS.TRANSACTION_ID LEFT JOIN EQUIPMENTLENDINGTRANSACTIONS EQUIPMENTLENDINGTRANSACTIONS ON OTRANSACTIONS.TRANSACTION_ID=EQUIPMENTLENDINGTRANSACTIONS.TRANSACTION_ID LEFT JOIN ACTIVITIES OACTIVITIES ON OTRANSACTIONS.ACTIVITY_ID=OACTIVITIES.ACTIVITY_ID LEFT JOIN SEASONS SEASONS ON SEASONS.SEASON_ID=OACTIVITIES.SEASON_ID LEFT JOIN CHILD_SEASONS CHILD_SEASONS ON CHILD_SEASONS.CHILD_SEASON_ID=OACTIVITIES.CHILD_SEASON_ID LEFT JOIN DCPROGRAMS DCPROGRAMS ON TRANSACTIONS.DCProgram_ID=DCPROGRAMS.DCProgram_ID LEFT JOIN CUSTOMER_TITLES CUSTOMER_TITLES ON CUSTOMER_TITLES.CUSTOMER_TITLE_ID=CUSTOMERS.CUSTOMER_TITLE_ID LEFT JOIN (select (case when  LEN(STATE) = 0 then STATENAME else STATE end) as fixed_state,* from STATES) RSTATES ON CUSTOMERS.state=RSTATES.fixed_state LEFT JOIN (select (case when  LEN(STATE) = 0 then STATENAME else STATE end) as fixed_state,* from STATES) MSTATES ON CUSTOMERS.mailingstate=MSTATES.fixed_state
WHERE RECEIPTHEADERS.VOIDED = 0 AND CUSTOMERACCOUNTS.VOIDED = 0
	AND customers.customer_id in (147)
	AND CUSTOMERS.CUSTOMER_ID NOT IN (SELECT MAX(CUSTOMERS.Customer_ID) AS CID FROM ARTRANSACTIONS "ARTRANSACTIONS" JOIN ARTRANSACTIONS ARTRANSACTIONS_1 ON ARTRANSACTIONS.ORIGINALARTRANSACTION_ID=ARTRANSACTIONS_1.ARTRANSACTION_ID LEFT JOIN ARSCHEDULEHEADER ARSCHEDULEHEADER ON ARTRANSACTIONS.ARSCHEDULEHEADER_ID=ARSCHEDULEHEADER.ARSCHEDULEHEADER_ID LEFT JOIN RECEIPTDETAILS RECEIPTDETAILS ON ARTRANSACTIONS_1.RECEIPTDETAIL_ID=RECEIPTDETAILS.RECEIPTDETAIL_ID LEFT JOIN TRANSACTIONS TRANSACTIONS ON RECEIPTDETAILS.TRANSACTION_ID=TRANSACTIONS.TRANSACTION_ID JOIN TRANSACTIONS OTRANSACTIONS ON TRANSACTIONS.ROOTTRANSACTION_ID=OTRANSACTIONS.TRANSACTION_ID LEFT JOIN EQUIPMENTLENDINGTRANSACTIONS EQUIPMENTLENDINGTRANSACTIONS ON OTRANSACTIONS.TRANSACTION_ID=EQUIPMENTLENDINGTRANSACTIONS.TRANSACTION_ID LEFT JOIN RECEIPTHEADERS RECEIPTHEADERS ON ARTRANSACTIONS.RECEIPTHEADER_ID=RECEIPTHEADERS.RECEIPTHEADER_ID LEFT JOIN PERMITS PERMITS ON ARSCHEDULEHEADER.PERMIT_ID=PERMITS.PERMIT_ID LEFT JOIN ACTIVITIES OACTIVITIES ON OTRANSACTIONS.ACTIVITY_ID=OACTIVITIES.ACTIVITY_ID LEFT JOIN SEASONS SEASONS ON SEASONS.SEASON_ID=OACTIVITIES.SEASON_ID LEFT JOIN CHILD_SEASONS CHILD_SEASONS ON CHILD_SEASONS.CHILD_SEASON_ID=OACTIVITIES.CHILD_SEASON_ID LEFT JOIN DCPROGRAMS DCPROGRAMS ON TRANSACTIONS.DCProgram_ID=DCPROGRAMS.DCProgram_ID JOIN CUSTOMERS CUSTOMERS ON ARTRANSACTIONS.CUSTOMER_ID=CUSTOMERS.CUSTOMER_ID and ARSCHEDULEHEADER.COMPANY_ID is null LEFT JOIN CUSTOMER_TITLES CUSTOMER_TITLES ON CUSTOMER_TITLES.CUSTOMER_TITLE_ID=CUSTOMERS.CUSTOMER_TITLE_ID LEFT JOIN (select (case when  LEN(STATE) = 0 then STATENAME else STATE end) as fixed_state,* from STATES) RSTATES ON CUSTOMERS.state=RSTATES.fixed_state LEFT JOIN (select (case when  LEN(STATE) = 0 then STATENAME else STATE end) as fixed_state,* from STATES) MSTATES ON CUSTOMERS.mailingstate=MSTATES.fixed_state WHERE ARTRANSACTIONS.VOIDED = 0 AND ARTRANSACTIONS_1.VOIDED = 0 AND customers.customer_id in (147) GROUP BY CUSTOMERS.LASTNAME, CUSTOMERS.FIRSTNAME, CUSTOMERS.Customer_ID, RECEIPTDETAILS.RECEIPTDETAIL_ID, RECEIPTDETAILS.ORIGINALRECEIPTDETAIL_ID, ARSCHEDULEHEADER.ARSCHEDULEHEADER_ID, TRANSACTIONS.PACKAGE_ID, DCPROGRAMS.PROGRAMTYPE_ID, TRANSACTIONS.DCPROGRAM_ID HAVING SUM(ARTRANSACTIONS.AMOUNT) <> 0)
GROUP BY CUSTOMERS.CUSTOMER_ID, TRANSACTIONS.PACKAGE_ID, DCPROGRAMS.PROGRAMTYPE_ID, TRANSACTIONS.DCPROGRAM_ID
HAVING ((Select isnull(SUM(CUSTOMERACCOUNTS.AMOUNT),0) from CUSTOMERACCOUNTS left join LINKEDCREDITS lc on lc.CUSTOMERACCOUNT_ID = CUSTOMERACCOUNTS.CUSTOMERACCOUNT_ID where CUSTOMERACCOUNTS.Customer_ID=CUSTOMERS.Customer_ID and CUSTOMERACCOUNTS.CUSTOMERACCOUNT_ID not in ( select lc.CUSTOMERACCOUNT_ID from LINKEDCREDITS lc where lc.UNLINKED = 0 and lc.CUSTOMERACCOUNT_ID > 0)  AND ((CUSTOMERACCOUNTS.ExpirationDate = {ts '1899-12-30 00:00:00'} OR CUSTOMERACCOUNTS.ExpirationDate >= {ts '2015-09-30 14:35:14'}) AND CUSTOMERACCOUNTS.VOIDED=0)) + (select isnull(sum(lc.linked_amount),0)from LINKEDCREDITS lc where lc.CUSTOMERACCOUNT_ID is null and lc.CUSTOMER_ID = CUSTOMERS.CUSTOMER_ID and lc.UNLINKED = 0)) <> 0
order by CustomerCompanyGroup, CName, CID, RECEIPTNUMBER, doubled